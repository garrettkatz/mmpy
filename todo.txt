compressed proofs
disjoint var reqs
test database and theory

rule:
    is this:
        list of floating/essential hypotheses and conclusion
    rule data structure instead of scope:
        each rule has pointers to the hypotheses etc. in its scope.

inference:
    an inference does this:
        match all hyps of existing rule against a list of dependencies
            dependencies can be floating/essential hypotheses or other proved a/p statements
        apply match substitution to conclusion of existing rule
    an inference data structure maintains this:
        pointer to the existing rule used as justification
        pointer to the conclusion with substitution applied
        pointer to the dependencies
        the substitution itself

proof of a rule:
    bipartite graph of statements and inferences
        one inference per statement (its conclusion)
    leaves are the rule's hypotheses, or hypothesis-less rule conclusions (axioms and theorems)

any statement in a proof can be viewed as a set of "new" rules
    the statement is the conclusion of the new rules
    the hypotheses of the new rules are any frontier of statements in a graph search backwards from the conclusion
        excluding axioms, they do not need to be listed as essential hypotheses of the new rules
    not all really new if
        match substitution was identity
        or it "standardizes" to an existing rule (same after renaming variables alphabetically)
